self.agent = nao_agent.NaoAgent()

self.agent.add_pick_best_rule(self.agent.AND(self.agent.B('plans'), self.agent.B('danger_close')), self.compare_plans_asimov_WD, self.update_plan_rule)
self.agent.add_pick_best_rule(self.agent.AND(self.agent.B('plans'), self.agent.NOT(self.agent.B('danger_close'))), self.compare_plans_asimov_WT, self.update_plan_rule)

def compare_plans_asimov_WD(self, plan1, plan2):
	if ((plan1.robot_walking_dist < plan2.robot_walking_dist) and not (much_worse(plan1, plan2, 'human_danger_dist'))):
		return 1;
	else:
		if much_worse(plan2, plan1, 'human_danger_dist'):
			return 1;
		else:
			return 0;
		
def compare_plans_asimov_WT(self, plan1, plan2):
	if ((plan2.wait_time < plan1.wait_time) and not (much_worse(plan1, plan2, 'human_danger_dist'))):
		return 1;
	else:
		if (much_worse(plan2, plan1, 'human_danger_dist')):
				return 1;
			else:
				return 0;
		
def update_plan_rule(self, plan):
	self.agent.add_belief('current_plan', plan);