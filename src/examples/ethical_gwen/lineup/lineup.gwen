:name: executive

:Ethical Policy:

E(flightPhase(lineup),doNotDamageOwnAircraft,1)
E(flightPhase(lineup),doNotCollideAirportHardware,2)
E(flightPhase(lineup),doNotCollidePeople,3)
E(flightPhase(lineup),doNotCollideMannedAircraft,4)

:Initial Beliefs:
flightPhase(lineup)   // start off in lineup for simplicity

:Reasoning Rules:

all_well :- ~ brakesCompleteFailure;

other_choices_violated(T) :- ~ untried_plan_not_violates(T);
untried_plan_not_violates(T) :- untried_plan(P), ~ an_ethic_in(P, T);
untried_plan(P) :- applicable(P) [applicable_plans], ~ already_tried(P);
an_ethic_in(P, [Eth|T]) :- ethics_of(P, Eth) [ethics];
an_ethic_in(P, [Eth|T]) :- an_ethic_in(P, T);

un_tried_plan :- applicable(P) [applicable_plans], ~ already_tried(P);
some_applicable :- applicable(P) [applicable_plans];
some_plan_tried :- already_tried(P);

:Initial Goals:

startup [perform]

:Plans:

+!startup [perform] : {True} <- +!missionComplete [achieve];

// Vehicle (veh) sensor is polled.
+!missionComplete [achieve] : {B flightPhase(lineup), ~B polled(veh) } <-
   +.lock, +polled(veh), poll(veh), -.lock;
+!missionComplete [achieve] : {B polled(veh), B all_well, ~B route(R)} <-
   plan(regularRoutes,all_well);
+!missionComplete [achieve] : {B polled(veh), B all_well, B route(R)} <-
   enactRoute(R);
